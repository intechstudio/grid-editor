diff --git a/node_modules/lua-format/src/luamin.js b/node_modules/lua-format/src/luamin.js
index fcf42ff..649e981 100644
--- a/node_modules/lua-format/src/luamin.js
+++ b/node_modules/lua-format/src/luamin.js
@@ -880,13 +880,17 @@ function CreateLuaParser(text) {
 
     function functionargs(locals, upvals) {
         let tk = peek()
+        
         if (tk.Source == "(") {
             let oparenTk = get()
             let argList = []
             let argCommaList = []
-            while (peek().Source != ")") {
+            let argNeeded = false;
+            while (peek().Source != ")" || argNeeded) {
                 argList.push(expr(locals, upvals))
+                argNeeded = false;
                 if (peek().Source == ",") {
+                    argNeeded = true;
                     argCommaList.push(get())
                 } else {
                     break
@@ -4198,12 +4202,11 @@ function BeautifyVariables(globalScope, rootScope, renameGlobals) {
 }
 
 
-let watermark = `--discord.gg/boronide, code generated using luamin.js™\n\n`
+//let watermark = `--discord.gg/boronide, code generated using luamin.js™\n\n`
 
 let luaminp = {}
 
 luaminp.Minify = function(scr, options) {
-
     let ast = CreateLuaParser(scr)
     let [glb, root] = AddVariableInfo(ast)
 
@@ -4218,7 +4221,7 @@ luaminp.Minify = function(scr, options) {
     StripAst(ast)
 
     let result = PrintAst(ast)
-    result = `${watermark}\n\n${result}`
+    //result = `${watermark}\n\n${result}`
 
     return result
 }
@@ -4237,7 +4240,7 @@ luaminp.Beautify = function(scr, options) {
     FormatAst(ast)
 
     let result = PrintAst(ast)
-    result = `${watermark}\n\n${result}`
+    //result = `${watermark}\n\n${result}`
 
     return result
 }
