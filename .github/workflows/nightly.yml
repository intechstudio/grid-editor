name: Build Nightly Grid Editor

on: 
  push:
    branches:
      - stable
      - dev

jobs:
  win-build:
    name: Windows Build
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ''
          submodules: true

      - name: Setup NodeJs
        uses: actions/setup-node@v2
        with:
          node-version: '16.6'        

      - name: Install dependencies
        run: npm i
        env:
          UA: ${{ secrets.UA }}
      
      - name: Build        
        run: npm run export:nightly
        if: ${{ always() }}
        env:     
          # gh repo token
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # windows Code signing
          CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows-nightly
          path: dist/*.*
      
      - name: Download Artifacts
        uses: actions/download-artifact@v2

  mac-build:
    name: MacOS Build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ''
          submodules: true

      - name: Setup NodeJs
        uses: actions/setup-node@v2
        with:
          node-version: '16.6'        

      - name: Install dependencies
        run: npm i
        env:
          UA: ${{ secrets.UA }}
      
      - name: Build        
        run: npm run export:nightly
        if: ${{ always() }}
        env:     
          # gh repo token
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # Apple ID
          APPLE_ID: ${{secrets.APPLE_ID}}
          APPLE_ID_PASSWORD: ${{secrets.APPLE_ID_PASSWORD}}

          # macOS Code signing
          CSC_LINK: ${{ secrets.MAC_CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.MAC_CSC_KEY_PASSWORD }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: macos-nightly
          path: dist/*.*
      
      - name: Download Artifacts
        uses: actions/download-artifact@v2

  linux-build:
    name: Linux Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ''
          submodules: true

      - name: Setup NodeJs
        uses: actions/setup-node@v2
        with:
          node-version: '16.6'        

      - name: Install dependencies
        run: npm i
        env:
          UA: ${{ secrets.UA }}
      
      - name: Build        
        run: npm run export:nightly
        if: ${{ always() }}
        env:     
          # gh repo token
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux-nightly
          path: dist/*.*
      
      - name: Download Artifacts
        uses: actions/download-artifact@v2

  linux-unittest:
    name: Linux Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ''
          submodules: true

      - name: Setup NodeJs
        uses: actions/setup-node@v2
        with:
          node-version: '16.6'        

      - name: Install dependencies
        run: npm i
        env:
          UA: ${{ secrets.UA }}

      - name: 'Unittests'
        run: |
          npm test >> unittest.txt
          cat unittest.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux-unittest
          path: unittest.txt
      
      - name: Download Artifacts
        uses: actions/download-artifact@v2

      - uses: tsickert/discord-webhook@v4.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_DEV_WEBHOOK }}
          content: "Heyo, here are the editor unittest results!"
          filename: "unittest.txt"