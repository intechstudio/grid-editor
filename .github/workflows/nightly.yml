name: Build Nightly Grid Editor

on: push

jobs:
  win-build:
    name: Windows Build
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ""
          submodules: true

      # this is written with powershell
      - name: Update configuration.json
        run: |  
          jq '.NODE_ENV = \"nightly\" ' configuration.json | Set-Content -Path configuration.json
          cat configuration.json

      - name: Setup NodeJs
        uses: actions/setup-node@v3
        with:
          node-version: "16.13.2"

      - name: Install dependencies
        run: npm i
        env:
          UA: ${{ secrets.UA }}

      - name: Build
        run: npm run export:nightly
        if: ${{ always() }}
        env:
          # gh repo token
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # windows Code signing
          WIN_CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-nightly
          path: build/*.*

      - name: Download Artifacts
        uses: actions/download-artifact@v3

  mac-build:
    name: MacOS Build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ""
          submodules: true

      - name: Update configuration.json
        run: | 
          echo "`jq '.NODE_ENV="prod" | .PROFILE_CLOUD_URL="https://profile-cloud-dev.web.app"' configuration.json`" > configuration.json
          cat configuration.json

      - name: Setup NodeJs
        uses: actions/setup-node@v3
        with:
          node-version: "16.13.2"

      - name: Install dependencies
        run: npm i
        env:
          UA: ${{ secrets.UA }}

      - name: Build
        run: npm run export:nightly
        if: ${{ always() }}
        env:
          # gh repo token
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # Apple ID
          APPLE_ID: ${{secrets.APPLE_ID}}
          APPLE_ID_PASSWORD: ${{secrets.APPLE_ID_PASSWORD}}

          # macOS Code signing
          CSC_LINK: ${{ secrets.MAC_CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.MAC_CSC_KEY_PASSWORD }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-nightly
          path: build/*.*

      - name: Download Artifacts
        uses: actions/download-artifact@v3

  mac-m1-build:
    name: Apple M1 Build
    runs-on: m1

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ""
          submodules: true

      - name: Update configuration.json NODE_ENV
        uses: jossef/action-set-json-field@v2.1
        with:
          file: configuration.json
          field: NODE_ENV
          value: nightly

      - name: Setup NodeJs
        uses: actions/setup-node@v3
        with:
          node-version: "16.13.2"

      - name: Install dependencies
        run: npm i
        env:
          UA: ${{ secrets.UA }}

      - name: Build
        run: npm run export:nightly
        if: ${{ always() }}
        env:
          # gh repo token
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # Apple ID
          APPLE_ID: ${{secrets.APPLE_ID}}
          APPLE_ID_PASSWORD: ${{secrets.APPLE_ID_PASSWORD}}

          # macOS Code signing
          CSC_LINK: ${{ secrets.MAC_CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.MAC_CSC_KEY_PASSWORD }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mac-m1-nightly
          path: build/*.*

      - name: Download Artifacts
        uses: actions/download-artifact@v3

  linux-build:
    name: Linux Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ""
          submodules: true

      - name: Update configuration.json NODE_ENV
        uses: jossef/action-set-json-field@v2.1
        with:
          file: configuration.json
          field: NODE_ENV
          value: nightly

      - name: Setup NodeJs
        uses: actions/setup-node@v3
        with:
          node-version: "16.13.2"

      - name: Install dependencies
        run: npm i
        env:
          UA: ${{ secrets.UA }}

      - name: Build
        run: npm run export:nightly
        if: ${{ always() }}
        env:
          # gh repo token
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-nightly
          path: build/*.*

      - name: Download Artifacts
        uses: actions/download-artifact@v3

  linux-unittest:
    name: Linux Unit Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ""
          submodules: true

      - name: Update configuration.json NODE_ENV
        uses: jossef/action-set-json-field@v2.1
        with:
          file: configuration.json
          field: NODE_ENV
          value: nightly

      - name: Setup NodeJs
        uses: actions/setup-node@v3
        with:
          node-version: "16.13.2"

      - name: Install dependencies
        run: npm i
        env:
          UA: ${{ secrets.UA }}

      - name: "Unittests"
        run: |
          npm test >> unittest.txt
          cat unittest.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-unittest
          path: unittest.txt

      - name: Download Artifacts
        uses: actions/download-artifact@v3

      - uses: tsickert/discord-webhook@v4.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_DEV_WEBHOOK }}
          content: "Heyo, here are the editor unittest results!"
          filename: "unittest.txt"
